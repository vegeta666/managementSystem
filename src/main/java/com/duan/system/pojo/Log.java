package com.duan.system.pojo;

import java.util.Date;

public class Log {
    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column log.id
     *
     * @mbg.generated
     */
    private int id;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column log.operatetype
     *
     * @mbg.generated
     */
    private String operatetype;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column log.operateresult
     *
     * @mbg.generated
     */
    private String operateresult;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column log.date
     *
     * @mbg.generated
     */
    private Date date;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column log.operator
     *
     * @mbg.generated
     */
    private String operator;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column log.id
     *
     * @return the value of log.id
     *
     * @mbg.generated
     */
    public Integer getId() {
        return id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column log.id
     *
     * @param id the value for log.id
     *
     * @mbg.generated
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column log.operatetype
     *
     * @return the value of log.operatetype
     *
     * @mbg.generated
     */
    public String getOperatetype() {
        return operatetype;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column log.operatetype
     *
     * @param operatetype the value for log.operatetype
     *
     * @mbg.generated
     */
    public void setOperatetype(String operatetype) {
        this.operatetype = operatetype == null ? null : operatetype.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column log.operateresult
     *
     * @return the value of log.operateresult
     *
     * @mbg.generated
     */
    public String getOperateresult() {
        return operateresult;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column log.operateresult
     *
     * @param operateresult the value for log.operateresult
     *
     * @mbg.generated
     */
    public void setOperateresult(String operateresult) {
        this.operateresult = operateresult == null ? null : operateresult.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column log.date
     *
     * @return the value of log.date
     *
     * @mbg.generated
     */
    public Date getDate() {
        return date;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column log.date
     *
     * @param date the value for log.date
     *
     * @mbg.generated
     */
    public void setDate(Date date) {
        this.date = date;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column log.operator
     *
     * @return the value of log.operator
     *
     * @mbg.generated
     */
    public String getOperator() {
        return operator;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column log.operator
     *
     * @param operator the value for log.operator
     *
     * @mbg.generated
     */
    public void setOperator(String operator) {
        this.operator = operator == null ? null : operator.trim();
    }
}